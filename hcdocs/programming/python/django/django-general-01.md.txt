# General setup

```
python3 -m venv venvdj
source venvdj/bin/activate
pip install django==3.2.*

django-admin startproject mydjango
```

# Settings

Create `.gitignore`:

```
*.pyc
*.pyo
__pycache__/
*secret*
db.sqlite3
```

Create a file `/mydjango/mysecrets.py`, in the same directory as `settings.py`:

```
SECRET_KEY = "...some random string..."
ALLOWED_HOSTS = ['localhost', 'mydomain.com']
CSRF_TRUSTED_ORIGINS = ['https://mydomain.com']
```

Edit `/mydjango/settings.py`, removing the default variables:

```
from .mysecrets import SECRET_KEY, ALLOWED_HOSTS, CSRF_TRUSTED_ORIGINS
```

# Custom User

For details, see William S. Vincent's book.

`python manage.py startapp accounts`

```
# accounts/models.py

from django.contrib.auth.models import AbstractUser
from django.db import models


class CustomUser(AbstractUser):
    pass
```

Add to `settings.py`:

```
INSTALLED_APPS = [
    ...
    'accounts',
]

...

AUTH_USER_MODEL = 'accounts.CustomUser'
```

Run `python manage.py makemigrations accounts`

and `python manage.py migrate`

## Custom User forms

```
# accounts/forms.py

from django.contrib.auth import get_user_model
from django.contrib.auth.forms import UserCreationForm, UserChangeForm


class CustomUserCreationForm(UserCreationForm):

    class Meta:
        model = get_user_model()
        fields = ('username', 'email',)


class CustomUserChangeForm(UserChangeForm):

    class Meta:
        model = get_user_model()
        fields = ('username', 'email',)
```

## Custom User Admin

```
# accounts/admin.py

from django.contrib import admin
from django.contrib.auth import get_user_model
from django.contrib.auth.admin import UserAdmin

from .forms import CustomUserCreationForm, CustomUserChangeForm

CustomUser = get_user_model()


class CustomUserAdmin(UserAdmin):
    extra_fieldsets = (
        ('Personal info',
         {
             'fields': ('age',),
         }
        ),
    )

    add_form = CustomUserCreationForm
    add_fieldsets = (
        ('Account data',
         {
             'fields': ('username', 'email', 'password1', 'password2',)
         }
        ),
    ) + extra_fieldsets

    form = CustomUserChangeForm
    fieldsets = (
        ('Account data',
         {
             'fields': ('username', 'email', 'password',)
         }
        ),
    ) + extra_fieldsets

    model = CustomUser
    list_display = ['username', 'email',]

admin.site.register(CustomUser, CustomUserAdmin)
```

# Initial deployment

`python manage.py createsuperuser` (email can be anything, like `a@a.com`)

`python manage.py runserver`
